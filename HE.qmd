---
title: "HE"
author: "Yufei HE"
format: html
editor: visual
---

### Question 2:

A link to my github repository: <https://github.com/hyf19980724/science_fiction.git>

### Question 3:

```{r}
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
```

```{r}
library(here)
library(vroom)
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
here::i_am("science_fiction.Rproj")
data <- vroom(here("THE_PLANETS.csv"))
```

```{r}

# Check the number of planets and variables
expected_planets <- 789
actual_planets <- nrow(data)
expected_variables <- 8
actual_variables <- ncol(data)

# Output message based on data validity
if (actual_planets == expected_planets && actual_variables == expected_variables) {
  message("Data loaded successfully with the correct number of planets and variables.")
} else {
  message("Data loading issue: Number of planets or variables does not match expectations.")
}

# Check for numerical variables
numerical_vars <- c("Mass", "radius", "Relative Density")
if(all(sapply(data[numerical_vars], is.numeric))) {
  message("All numerical variables are correctly recognized.")
} else {
  message("There is an issue with the recognition of numerical variables.")
}

```

### Question 4:

```{r}
num_observations <- nrow(data)
num_variables <- ncol(data)
missing_values_per_variable <- sapply(data, function(x) sum(is.na(x)))
observations_with_missing <- sum(!complete.cases(data))

# Creating a data frame for the table
table_data <- data.frame(
  Metric = c("Number of Observations", 
             "Number of Variables", 
             "Missing Values per Variable", 
             "Observations with at Least One Missing Value"),
  Value = I(list(
    num_observations, 
    num_variables, 
    missing_values_per_variable, 
    observations_with_missing
  ))
)

# Display the table using kable
kable(table_data, format = "markdown", col.names = c("Metric", "Value"))
```

### Question 5:

```{r}
data_clean <- data %>% 
  filter(!is.na(radius) & !is.na(`Relative Density`))
```

```{r}
ggplot(data_clean, aes(x = radius, y = `Relative Density`)) +
  geom_point() +
  labs(x = "Radius (in Earth units)", y = "Relative Density (in Earth units)", 
       title = "Density of Planets as a Function of Their Radius")
```

### Question 6:

```{r}
densest_planet <- data[which.max(data$`Relative Density`), c('p_name', 'Relative Density')]
least_dense_planet <- data[which.min(data$`Relative Density`), c('p_name', 'Relative Density')]
extreme_planets <- data.frame(
  Description = c("Densest Planet", "Least Dense Planet"),
  Planet_Name = c(densest_planet$p_name, least_dense_planet$p_name),
  Value = c(densest_planet$`Relative Density`, least_dense_planet$`Relative Density`))
kable(extreme_planets, format = "markdown", col.names = c("Description", "Planet Name", "Value"))
```

### Question 7:

```{r}

library(stringr)
library(tidyr)

terrain_data <- data %>%
  select(Planet_number, `TERRAIN TYPE`) %>%
  mutate(`TERRAIN TYPE` = str_split(`TERRAIN TYPE`, pattern = ";")) %>%
  unnest(`TERRAIN TYPE`)

climate_data <- data %>%
  select(Planet_number, Type_climate) %>%
  mutate(Type_climate = str_split(Type_climate, pattern = ";")) %>%
  unnest(Type_climate)
```

### Question 8: 

```{r}
num_climates_per_planet <- climate_data %>% group_by(Planet_number) %>% summarize(Num_Climate_Types = n())
num_terrains_per_planet <- terrain_data %>% group_by(Planet_number) %>% summarize(Num_Terrain_Types = n())

# Plot for climates
ggplot(num_climates_per_planet, aes(x = Num_Climate_Types)) +
  geom_histogram(binwidth = 1, fill="blue", color="black") +
  labs(title = "Distribution of Number of Climates per Planet", x = "Number of Climates", y = "Number of Planets")

# Plot for terrains
ggplot(num_terrains_per_planet, aes(x = Num_Terrain_Types)) +
  geom_histogram(binwidth = 1, fill="pink", color="black") +
  labs(title = "Distribution of Number of Terrains per Planet", x = "Number of Terrains", y = "Number of Planets")
```

### Question 9:

```{r}
mass_climate_data <- data %>%
  select(Planet_number, Mass) %>%
  inner_join(climate_data, by = "Planet_number")

mass_climate_data <- mass_climate_data %>% 
  filter(!is.na(Mass) & !is.na(Type_climate))

ggplot(mass_climate_data, aes(x = Mass, fill = Type_climate)) +
  geom_histogram(position = "dodge", binwidth = 0.5) +
  facet_wrap(~Type_climate, scales = "free") +
  labs(x = "Mass ", y = "Count", 
       title = "Distribution of Planet Mass by Climate Type")
```

### Question 10:

```{r}
here::i_am("science_fiction.Rproj")
star_data <- vroom(here("Data%stars.csv"))
```

### Question 11:

```{r}
non_matching_planets <- anti_join(data, star_data, by = c("STAR_KEY" = "STAR_KEY"))
non_matching_planet_names <- non_matching_planets$p_name
unmatched_stars_count <- sum(!star_data$STAR_KEY %in% data$STAR_KEY)

cat("Planets with non-matching STAR_KEY:\n", paste(non_matching_planet_names, collapse = ", "), "\n")
cat("Number of stars with no associated planet:", unmatched_stars_count, "\n")

```
