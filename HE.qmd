---
title: "HE"
author: "Yufei HE"
format: html
editor: visual
---

### Question 2:

A link to my github repository: <https://github.com/hyf19980724/science_fiction.git>

### Question 3:

```{r}
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
```

```{r}
library(here)
library(vroom)
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
here::i_am("science_fiction.Rproj")
data <- vroom(here("THE_PLANETS.csv"))
```

```{r}

# Check the number of planets and variables
expected_planets <- 789
actual_planets <- nrow(data)
expected_variables <- 8
actual_variables <- ncol(data)

# Output message based on data validity
if (actual_planets == expected_planets && actual_variables == expected_variables) {
  message("Data loaded successfully with the correct number of planets and variables.")
} else {
  message("Data loading issue: Number of planets or variables does not match expectations.")
}

# Check for numerical variables
numerical_vars <- c("Mass", "radius", "Relative Density")
if(all(sapply(data[numerical_vars], is.numeric))) {
  message("All numerical variables are correctly recognized.")
} else {
  message("There is an issue with the recognition of numerical variables.")
}

```

### Question 4:

```{r}
num_observations <- nrow(data)
num_variables <- ncol(data)
missing_values_per_variable <- sapply(data, function(x) sum(is.na(x)))
observations_with_missing <- sum(!complete.cases(data))

# Creating a data frame for the table
table_data <- data.frame(
  Metric = c("Number of Observations", 
             "Number of Variables", 
             "Missing Values per Variable", 
             "Observations with at Least One Missing Value"),
  Value = I(list(
    num_observations, 
    num_variables, 
    missing_values_per_variable, 
    observations_with_missing
  ))
)

# Display the table using kable
kable(table_data, format = "markdown", col.names = c("Metric", "Value"))
```

### Question 5:

```{r}
data_clean <- data %>% 
  filter(!is.na(radius) & !is.na(`Relative Density`))
```

```{r}
ggplot(data_clean, aes(x = radius, y = `Relative Density`)) +
  geom_point() +
  labs(x = "Radius (in Earth units)", y = "Relative Density (in Earth units)", 
       title = "Density of Planets as a Function of Their Radius")
```
